{"version":3,"file":"bundle.umd.js","sources":["../src/linkUtils.ts","../src/link.ts"],"sourcesContent":["import Observable from 'zen-observable-ts';\n\nimport { GraphQLRequest, Operation } from './types';\nimport { ApolloLink } from './link';\n\nimport { getOperationName } from 'apollo-utilities';\nimport { invariant, InvariantError } from 'ts-invariant';\nexport { getOperationName };\n\nexport function validateOperation(operation: GraphQLRequest): GraphQLRequest {\n  const OPERATION_FIELDS = [\n    'query',\n    'operationName',\n    'variables',\n    'extensions',\n    'context',\n  ];\n  for (let key of Object.keys(operation)) {\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw new InvariantError(`illegal argument: ${key}`);\n    }\n  }\n\n  return operation;\n}\n\nexport class LinkError extends Error {\n  public link: ApolloLink;\n  constructor(message?: string, link?: ApolloLink) {\n    super(message);\n    this.link = link;\n  }\n}\n\nexport function isTerminating(link: ApolloLink): boolean {\n  return link.request.length <= 1;\n}\n\nexport function toPromise<R>(observable: Observable<R>): Promise<R> {\n  let completed = false;\n  return new Promise<R>((resolve, reject) => {\n    observable.subscribe({\n      next: data => {\n        if (completed) {\n          invariant.warn(\n            `Promise Wrapper does not support multiple results from Observable`,\n          );\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject,\n    });\n  });\n}\n\n// backwards compat\nexport const makePromise = toPromise;\n\nexport function fromPromise<T>(promise: Promise<T>): Observable<T> {\n  return new Observable<T>(observer => {\n    promise\n      .then((value: T) => {\n        observer.next(value);\n        observer.complete();\n      })\n      .catch(observer.error.bind(observer));\n  });\n}\n\nexport function fromError<T>(errorValue: any): Observable<T> {\n  return new Observable<T>(observer => {\n    observer.error(errorValue);\n  });\n}\n\nexport function transformOperation(operation: GraphQLRequest): GraphQLRequest {\n  const transformedOperation: GraphQLRequest = {\n    variables: operation.variables || {},\n    extensions: operation.extensions || {},\n    operationName: operation.operationName,\n    query: operation.query,\n  };\n\n  // best guess at an operation name\n  if (!transformedOperation.operationName) {\n    transformedOperation.operationName =\n      typeof transformedOperation.query !== 'string'\n        ? getOperationName(transformedOperation.query)\n        : '';\n  }\n\n  return transformedOperation as Operation;\n}\n\nexport function createOperation(\n  starting: any,\n  operation: GraphQLRequest,\n): Operation {\n  let context = { ...starting };\n  const setContext = next => {\n    if (typeof next === 'function') {\n      context = { ...context, ...next(context) };\n    } else {\n      context = { ...context, ...next };\n    }\n  };\n  const getContext = () => ({ ...context });\n\n  Object.defineProperty(operation, 'setContext', {\n    enumerable: false,\n    value: setContext,\n  });\n\n  Object.defineProperty(operation, 'getContext', {\n    enumerable: false,\n    value: getContext,\n  });\n\n  Object.defineProperty(operation, 'toKey', {\n    enumerable: false,\n    value: () => getKey(operation),\n  });\n\n  return operation as Operation;\n}\n\nexport function getKey(operation: GraphQLRequest) {\n  // XXX We're assuming here that query and variables will be serialized in\n  // the same order, which might not always be true.\n  const { query, variables, operationName } = operation;\n  return JSON.stringify([operationName, query, variables]);\n}\n","import Observable from 'zen-observable-ts';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport {\n  GraphQLRequest,\n  NextLink,\n  Operation,\n  RequestHandler,\n  FetchResult,\n} from './types';\n\nimport {\n  validateOperation,\n  isTerminating,\n  LinkError,\n  transformOperation,\n  createOperation,\n} from './linkUtils';\n\nfunction passthrough(op, forward) {\n  return forward ? forward(op) : Observable.of();\n}\n\nfunction toLink(handler: RequestHandler | ApolloLink) {\n  return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\n\nexport function empty(): ApolloLink {\n  return new ApolloLink(() => Observable.of());\n}\n\nexport function from(links: ApolloLink[]): ApolloLink {\n  if (links.length === 0) return empty();\n  return links.map(toLink).reduce((x, y) => x.concat(y));\n}\n\nexport function split(\n  test: (op: Operation) => boolean,\n  left: ApolloLink | RequestHandler,\n  right?: ApolloLink | RequestHandler,\n): ApolloLink {\n  const leftLink = toLink(left);\n  const rightLink = toLink(right || new ApolloLink(passthrough));\n\n  if (isTerminating(leftLink) && isTerminating(rightLink)) {\n    return new ApolloLink(operation => {\n      return test(operation)\n        ? leftLink.request(operation) || Observable.of()\n        : rightLink.request(operation) || Observable.of();\n    });\n  } else {\n    return new ApolloLink((operation, forward) => {\n      return test(operation)\n        ? leftLink.request(operation, forward) || Observable.of()\n        : rightLink.request(operation, forward) || Observable.of();\n    });\n  }\n}\n\n// join two Links together\nexport const concat = (\n  first: ApolloLink | RequestHandler,\n  second: ApolloLink | RequestHandler,\n) => {\n  const firstLink = toLink(first);\n  if (isTerminating(firstLink)) {\n    invariant.warn(\n      new LinkError(\n        `You are calling concat on a terminating link, which will have no effect`,\n        firstLink,\n      ),\n    );\n    return firstLink;\n  }\n  const nextLink = toLink(second);\n\n  if (isTerminating(nextLink)) {\n    return new ApolloLink(\n      operation =>\n        firstLink.request(\n          operation,\n          op => nextLink.request(op) || Observable.of(),\n        ) || Observable.of(),\n    );\n  } else {\n    return new ApolloLink((operation, forward) => {\n      return (\n        firstLink.request(operation, op => {\n          return nextLink.request(op, forward) || Observable.of();\n        }) || Observable.of()\n      );\n    });\n  }\n};\n\nexport class ApolloLink {\n  public static empty = empty;\n  public static from = from;\n  public static split = split;\n  public static execute = execute;\n\n  constructor(request?: RequestHandler) {\n    if (request) this.request = request;\n  }\n\n  public split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler,\n  ): ApolloLink {\n    return this.concat(split(test, left, right || new ApolloLink(passthrough)));\n  }\n\n  public concat(next: ApolloLink | RequestHandler): ApolloLink {\n    return concat(this, next);\n  }\n\n  public request(\n    operation: Operation,\n    forward?: NextLink,\n  ): Observable<FetchResult> | null {\n    throw new InvariantError('request is not implemented');\n  }\n}\n\nexport function execute(\n  link: ApolloLink,\n  operation: GraphQLRequest,\n): Observable<FetchResult> {\n  return (\n    link.request(\n      createOperation(\n        operation.context,\n        transformOperation(validateOperation(operation)),\n      ),\n    ) || Observable.of()\n  );\n}\n"],"names":["tslib_1.__extends","getOperationName"],"mappings":"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"}